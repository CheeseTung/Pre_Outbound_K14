@using FPT_Education_IC.Data;
@using FPT_Education_IC.Service;
@using FPT_Education_IC.Statics;
@using FPT_Education_IC.Controllers;
@using System.Collections;
@{
    var emrSession = ViewBag.EmrSession as EmrSession;
    var userAccount = ViewBag.UserAccount as UsrAccount;
    var usrAccountId = ViewBag.UsrAccountId;
    AccountService accountService = ViewBag.AccountService;
    string emailUpdate = "";
    if (usrAccountId != null)
    {
        int userId = Convert.ToInt32(usrAccountId);
        emailUpdate = accountService.getUsrEmailById(userId);
    }
    ManagementService managementService = ViewBag.ManagementService;
    ArrayList listAllUsrRole = managementService.getAllUsrRoleManage(emrSession.userId);
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>Phân quyền tài khoản</title>
    <link href="/css/styles.css" rel="stylesheet" />
    <link rel="icon" type="image/x-icon" href="/assets/img/favicon.png" />
    <script data-search-pseudo-elements defer src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/js/all.min.js" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/feather-icons/4.28.0/feather.min.js" crossorigin="anonymous"></script>
</head>
<body class="nav-fixed">
    @Html.Partial("_Header" , emrSession)
    <div id="layoutSidenav">
        @Html.Partial("_Menu", emrSession)
        <div id="layoutSidenav_content">
            <main>
                <header class="page-header page-header-compact page-header-light border-bottom bg-white mb-4">
                    <div class="container-xl px-4">
                        <div class="page-header-content">
                            <div class="row align-items-center justify-content-between pt-3">
                                <div class="col-auto mb-3">
                                    <h1 class="page-header-title">
                                        <div class="page-header-icon"><i data-feather="user-plus"></i></div>
                                        Phân quyền tài khoản
                                    </h1>
                                </div>
                                <div class="col-12 col-xl-auto mb-3">
                                    <a class="btn btn-sm btn-outline-primary" href="@Url.Action("AccountManageList", "Management")">
                                        <i class="me-1" data-feather="arrow-left"></i>
                                        Danh sách tài khoản quản trị
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </header>
                <!-- Main page content-->
                <div class="container-xl px-4 mt-4">
                    <div class="row">
                        <div class="col-xl-2">
                        </div>
                        <div class="col-xl-8">
                            <!-- Account details card-->
                            <div class="card mb-4">
                                <div class="card-header">Thông tin phân quyền</div>
                                <div class="card-body">
                                    <!-- Form Group (email address)-->
                                    <div class="mb-3">
                                        <label class="small mb-1" for="inputEmailAddress">Địa chỉ Email</label>
                                        <input class="form-control" id="inputEmailAddress" type="email" onblur="validateEmail()" onkeyup="validateEmail()" placeholder=" example@@fpt.edu.vn" value="@emailUpdate" />
                                        <span id="emailError" class="text-danger text-sm"></span>
                                    </div>
                                    <!-- Form Group (Roles)-->
                                    <div class="mb-3">
                                        <label class="small mb-1" for="accountRole">Vai trò</label>
                                        <select class="form-select" id="accountRole">
                                            <option selected disabled value="">Chọn vai trò</option>
                                            @if (listAllUsrRole != null && listAllUsrRole.Count > 0)
                                            {
                                                foreach(UsrAccountRole role in listAllUsrRole)
                                                {
                                                    <option value="@role.RoleCode">@role.RoleName</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                    <button class="btn btn-primary" type="button" onclick="UpdateAccountRole()">Cập nhật</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
            @Html.Partial("_Footer")
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
    <script src="/js/scripts.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function validateEmail() {
            var emailInput = document.getElementById('inputEmailAddress');
            var emailError = document.getElementById('emailError');

            // Clear previous error message
            emailError.textContent = '';

            // Regular expression pattern for checking email format
            var emailPattern = /^[a-zA-Z0-9._%+-]+@@fpt\.edu\.vn$/;

            // Check if the email matches the pattern
            if (!emailPattern.test(emailInput.value)) {
                emailError.textContent = 'Vui lòng nhập email định dạng @@fpt.edu.vn';
                return;
            }

            // Call Ajax to check email existence
            var xhr = new XMLHttpRequest();
            xhr.open('GET', '/Management/CheckEmailExist?email=' + encodeURIComponent(emailInput.value), true);
            xhr.onload = function () {
                if (xhr.status === 200) {
                    if (xhr.responseText === '"false"') {
                        emailError.textContent = 'Người dùng chưa đăng nhập vào hệ thống';
                        return;
                    } else if (xhr.responseText === '"message"') {
                        emailError.textContent = 'Người dùng không thuộc campus của bạn';
                        return;
                    }
                }
            };
            xhr.send();
        }

        function UpdateAccountRole() {
            var emailInput = document.getElementById('inputEmailAddress').value;
            var roleSelect = document.getElementById('accountRole');
            var selectedRole = roleSelect.options[roleSelect.selectedIndex].value;

            if (!emailInput) {
                showAlert("Vui lòng nhập email.", "warning");
                return;
            }

            if (!selectedRole) {
                showAlert("Vui lòng chọn vai trò.", "warning");
                return;
            }

            var formData = new FormData();
            formData.append("userEmail", emailInput);
            formData.append("userRole", selectedRole);


            $.ajax({
                url: "/Management/UpdateUsrRole",
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: async function (data) {
                    if (data.success) {
                        await showAlert(data.message, "success");
                    } else {
                        if (data.message) {
                            await showAlert(data.message, "warning");
                        } else {
                            await showAlert("Đã có lỗi xảy ra vui lòng thử lại hoặc liên hệ với quản trị viên.", "error");
                        }
                    }
                },
                error: async function (xhr, status, error) {
                    await showAlert("Vui lòng thử lại hoặc liên hệ với quản trị viên.", "error");
                }
            });

        }
    </script>
</body>
</html>
